name: "Code Coverage"

on:
  push:
    paths:
      - 'include/**.hpp'
      - 'test/**.cpp'
      - '**.cmake'
      - 'CMakeLists.txt'
      - 'test/CMakeLists.txt'
      - '.github/workflows/coverage.yml'
  pull_request:
    paths:
      - 'include/**.hpp'
      - 'test/**.cpp'
      - '**.cmake'
      - 'CMakeLists.txt'
      - 'test/CMakeLists.txt'
      - '.github/workflows/coverage.yml'

jobs:
  coverage:
    name: Ubuntu ${{matrix.compiler.cc}} Coverage
    runs-on: ubuntu-20.04

    env:
      build-directory: build

    strategy:
      matrix:
        compiler:
          - { cc: gcc-10, cxx: g++-10, cov: gcov-10 }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare Environment
        run: |
          sudo apt-get install -y ninja-build ${{matrix.compiler.cxx}} g++-multilib
          sudo apt-get install lcov

          cmake -E make_directory ${{env.build-directory}}

      - name: Configure
        working-directory: ${{env.build-directory}}
        env:
          CC: ${{matrix.compiler.cc}}
          CXX: ${{matrix.compiler.cxx}}
        run: |
          cmake ..                                                            \
            -GNinja                                                           \
            -DCMAKE_BUILD_TYPE=Debug                                          \
            -DMSL_ENABLE_UNIT_TESTS=On                                        \
            -DCMAKE_CXX_FLAGS="--coverage"                                    \

      - name: Build
        working-directory: ${{env.build-directory}}
        run: cmake --build .

      - name: Test
        working-directory: ${{env.build-directory}}
        run: ctest --output-on-failure

      - name: Process Coverage Data
        working-directory: ${{env.build-directory}}
        run: |
          ${{matrix.compiler.cov}} $(find $(pwd) -name '*.o' -type f)

          # Generate coverage information
          lcov --capture                                                      \
            --gcov-tool ${{matrix.compiler.cov}}                              \
            --directory .                                                     \
            --output-file coverage_unfiltered.info

          # Strip symbols from 'test' directory
          lcov --remove coverage_unfiltered.info -o coverage.info             \
            --gcov-tool ${{matrix.compiler.cov}}                              \
            "/usr/*"                                                          \
            "$(pwd)/*"                                                        \
            "*/test/*"                                                        \
            "*/.conan/*"

      - name: Generate Coverage
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          path-to-lcov: ${{env.build-directory}}/coverage.info
