name: Windows

on: [push, pull_request]

jobs:
  test:
    name: Windows ${{matrix.compiler.name}} ${{matrix.compiler.version}}
    runs-on: windows-latest

    env:
      build-directory: build

    strategy:
      fail-fast: false
      matrix:
        compiler:
          # Xcode Versions
          - { name: "clang", version: "11", cc: clang, cxx: clang++ }
          - { name: "clang-cl", version: "latest", cc: clang-cl, cxx: clang-cl }
          - { name: "cl", version: "14.28", toolset_version: "142", cc: cl, cxx: cl }

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Prepare Environment
        shell: bash
        run: |
          if [[ ${{matrix.compiler.name}} == 'clang' ]]; then
            curl -fsSL -o LLVM${{matrix.compiler.version}}.exe https://github.com/llvm/llvm-project/releases/download/llvmorg-${{matrix.compiler.version}}.0.0/LLVM-${{matrix.compiler.version}}.0.0-win64.exe
            7z x LLVM${{matrix.compiler.version}}.exe -y -o"C:/Program Files/LLVM"
          fi

          cmake -E make_directory ${{env.build-directory}}

      - name: Configure (gcc)
        working-directory: ${{env.build-directory}}
        if: ${{matrix.compiler.name == 'gcc'}}
        env:
          CC: gcc
          CXX: g++
        run: |
          cmake .. -G"MinGW Makefiles"                                        `
            -DMSL_ENABLE_UNIT_TESTS=On

      - name: Configure (clang)
        working-directory: ${{env.build-directory}}
        if: ${{matrix.compiler.name == 'clang'}}
        run: |
          cmake .. -G"MinGW Makefiles"                                        `
            -DCMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang++.exe"      `
            -DMSL_ENABLE_UNIT_TESTS=On

      - name: Configure (clang-cl)
        working-directory: ${{env.build-directory}}
        if: ${{matrix.compiler.name == 'clang-cl'}}
        run: |
          cmake .. -G "Visual Studio 16 2019" -A x64                          `
            -T ClangCL                                                        `
            -DMSL_ENABLE_UNIT_TESTS=On

      - name: Configure (MSVC)
        working-directory: ${{env.build-directory}}
        if: ${{matrix.compiler.name == 'cl'}}
        run: |
          cmake .. -G "Visual Studio 16 2019"                                 `
            -T v${{matrix.compiler.toolset_version}}                          `
            -DMSL_ENABLE_UNIT_TESTS=On

      # Debug Configuration

      - name: Configure (Debug)
        working-directory: ${{env.build-directory}}
        if: ${{matrix.compiler.name == 'clang' || matrix.compiler.name == 'gcc'}}
        run: cmake . -DCMAKE_BUILD_TYPE=Debug

      - name: Build (Debug)
        working-directory: ${{env.build-directory}}
        run: cmake --build . --config Debug

      - name: Test (Debug)
        working-directory: ${{env.build-directory}}
        run: ctest -C Debug --output-on-failure

      # Release Configuration

      - name: Configure (Release)
        working-directory: ${{env.build-directory}}
        if: ${{matrix.compiler.name == 'clang' || matrix.compiler.name == 'gcc'}}
        run: cmake . -DCMAKE_BUILD_TYPE=Release

      - name: Build (Release)
        working-directory: ${{env.build-directory}}
        run: cmake --build . --config Release

      - name: Test (Release)
        working-directory: ${{env.build-directory}}
        run: ctest -C Release --output-on-failure
